// 1. Используя метод map() напишите код, который получает из массива строк новый массив, содержащий их длины.

// var vegetables = ['Капуста', 'Репа', 'Редиска', 'Морковка'];

// let vegetableLength = vegetables.map((el) => el.length);

// console.log( vegetableLength );

// 2. Имеется массив простых чисел: numbers = [2, 3, 5, 7, 11, 13, 17, 19]. Использую метод reduce() напишите функцию currentSums(numbers),
//    которая возвращает новый массив из такого же числа элементов, в котором на каждой позиции будет находиться сумма элементов массива numbers
//    до этой позиции включительно.

// let numbers = [2, 3, 5, 7, 11, 13, 17];

//  function currentSums(numbers) {
//      let result = [];

//      numbers.reduce((a, b, i) => result[i] = a + b, 0);
// console.log(result);
//  }
// currentSums(numbers); // [2, 2+3, 2+3+5, 2+3+5+7, 2+3+5+7+11, 2+3+5+7+11+13, 2+3+5+7+11+13+17] = [ 2,5,10,17,28,41,58]

// 3. Напишите код, который получает из массива чисел новый массив, содержащий пары чисел,
//    которые в сумме должны быть равны семи: (0:7), (1:6) и т.д.

// var arr = [0, 1, 2, 3, 4, 5, 6, 7];
// function sumSeven(numbers) {
//     arr.filter
// }

// 4. Перед вами переменная, содержащая строку. Напишите код, создащий массив, который будет 
//    состоять из первых букв слов строки str. 

// var str = "Каждый охотник желает знать, где сидит фазан"; 

// let foo = str.split(' ').map((el,index) => el[0]);
// console.log(foo);

// 5. Перед вами переменная, содержащая строку. Напишите код, создащий массив, который будет состоять из строк, 
//    состоящих из предыдущего, текущего и следующего символа строки str. 


// var str = "JavaScript"; 


// foo(arr); // [Ja,Jav,ava,vaS,aSc,Scr,cri,rip,ipt,pt] 



// 6. Напишите код, преобразующий массив цифр, которые располагаются неупорядоченно, 
//    в массив цифр расположенных по убыванию их значений.

// var numerics = [5, 7, 2, 9, 3, 1, 8];

// let foo = () => numerics.sort((a, b) => b - a);
// console.log(foo(numerics));
// foo(numerics); // [9,8,7,5,3,2,1]


// 7. Напишите код, объединяющий три массива цифр, и располагающий цифры, в полученном массиве, \
//    в порядке убывания их значений.

// var a = [1,2,3];
// var b = [4,5,6];
//     c = [7,8,9];


// function getArr(a, b, c) {
//     return a.concat(b, c).sort((index1, index2) => index2 - index1);
// }
// console.log(getArr(a, b, c));

// 8. Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. Найдите сумму элементов этого массива. 
//    Массив, конечно же, может быть произвольным. Показать решение.

// let array = [
//     [1, 2, 3],
//     [4, 5, 6],
//     [7, 8, 9],
// ];

// let sumArray = () => array.flat().reduce((a, b) => a + b);
// console.log(sumArray());

// 9. Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]. 
//    Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.

//    let array = [
//         [[1, 2], [3, 5]],
//         [[4, 5], [6, 6]],
//         [[7, 8], [9, 7]],
//     ];

// let sumArray = () => array.flat().flat().reduce((a, b) => a + b);
// console.log(sumArray());



// 10. Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.

// var a = [1,2,3, 4,5,6];


// function getArr(a) {
//     return a.sort((index1, index2) => index2 - index1);
// }
// console.log(getArr(a));


